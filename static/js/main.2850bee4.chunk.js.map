{"version":3,"sources":["media/Noam.svg","media/LBB.png","media/ZPB.png","media/headshot.jpg","media/FemFeed.png","media/Spotlist3.png","media/Vobia.png","components/header.tsx","components/imgModal.tsx","components/about.tsx","components/jumbotron.tsx","components/contact.tsx","components/projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","logo","height","width","backgroundColor","bar","boxShadow","flexGrow","buttons","float","logoContainer","NavBar","classes","AppBar","position","Toolbar","className","src","alt","Button","href","variant","color","imageStyle","maxHeight","closeButtonStyle","padding","ImageModal","props","Dialog","onClose","open","isOpen","DialogTitle","imageTitle","IconButton","aria-label","onClick","imageSource","altTextForImage","root","textAlign","header","marginBottom","marginTop","fontSize","ptext","margin","lineHeight","linkText","cursor","textDecoration","About","React","ziggyOpen","setZiggyOpen","ladyOpen","setLadyOpen","id","LBB","ZPB","headshotPic","contain","bigBlock","marginLeft","Jumbotron","Grid","container","spacing","item","xs","sm","headshot","iconRow","flexDirection","individualIcon","ContactSection","Link","target","LinkedIn","GitHub","Instagram","Twitter","pText","projectsRow","display","media","card","maxWidth","cardActionAreaWBottom","Projects","Card","CardActionArea","CardMedia","image","Spotlist","title","CardContent","Typography","gutterBottom","component","CardActions","size","Vobia","FemFeed","App","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","responsiveFontSizes","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,0MCOrCC,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,WAErBC,IAAK,CACDC,UAAW,wBACXC,SAAU,GAEdC,QAAS,CACLC,MAAO,SAEXC,cAAe,CACXH,SAAU,QAKTI,EAAkC,WAC3C,IAAMC,EAAUf,IAChB,OACI,gBAAC,WAAD,KACI,gBAACgB,EAAA,EAAD,CAAQC,SAAS,UACb,gBAACC,EAAA,EAAD,CAASC,UAAWJ,EAAQP,KACxB,uBAAKW,UAAWJ,EAAQF,eACpB,uBAAKO,IAAKhB,IAAMe,UAAWJ,EAAQX,KAAMiB,IAAI,qBAEjD,uBAAKF,UAAWJ,EAAQJ,SACpB,gBAACW,EAAA,EAAD,CAAQC,KAAK,iBAAiBC,QAAQ,OAAOC,MAAO,aAApD,SACA,gBAACH,EAAA,EAAD,CAAQC,KAAK,oBAAoBC,QAAQ,OAAOC,MAAO,aAAvD,YACA,gBAACH,EAAA,EAAD,CAAQC,KAAK,mBAAmBC,QAAQ,OAAOC,MAAO,aAAtD,gB,oDChClBzB,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACXuB,WAAY,CACVC,UAAW,SAEbC,iBAAkB,CAChBhB,MAAO,QACPiB,QAAS,UAaJC,EAAuD,SAClEC,GAEA,IAAMhB,EAAUf,IAEhB,OACE,gBAAC,WAAD,KACE,gBAACgC,EAAA,EAAD,CAAQC,QAASF,EAAME,QAASC,KAAMH,EAAMI,QAC1C,gBAACC,EAAA,EAAD,KACKL,EAAMM,WACP,gBAACC,EAAA,EAAD,CAAYC,aAAW,QAAQC,QAAST,EAAME,QAASd,UAAWJ,EAAQa,kBACtE,gBAAC,IAAD,QAGR,uBAAKR,IAAKW,EAAMU,YAAapB,IAAKU,EAAMW,gBAAiBvB,UAAWJ,EAAQW,gB,kCCnC9E1B,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwC,KAAM,CACJC,UAAW,SACXf,QAAS,QAEXgB,OAAQ,CACNC,aAAc,MACdC,UAAW,IACXC,SAAU,QAEZC,MAAO,CACLC,OAAQ,kBACRC,WAAY,QAEdC,SAAU,CACRC,OAAQ,UACR5B,MAAO,UACP6B,eAAgB,OAChB,UAAW,CACTA,eAAgB,mBAMXC,EAAiC,WAC5C,IAAMxC,EAAUf,IADkC,EAEhBwD,YAAwB,GAFR,mBAE3CC,EAF2C,KAEhCC,EAFgC,OAGlBF,YAAwB,GAHN,mBAG3CG,EAH2C,KAGjCC,EAHiC,KAKlD,OACE,uBAAKzC,UAAWJ,EAAQ4B,KAAMkB,GAAI,iBAChC,sBAAI1C,UAAWJ,EAAQ8B,QAAvB,YACA,qBAAG1B,UAAWJ,EAAQkC,OAAtB,4dAO8D,IAC5D,wBACET,QAAS,WACPoB,GAAY,IAEdzC,UAAWJ,EAAQqC,UAJrB,aARF,uBAgBuB,IACrB,wBACEZ,QAAS,WACPkB,GAAa,IAEfvC,UAAWJ,EAAQqC,UAJrB,SAOQ,IAxBV,iOA4BE,qBAAG7B,KAAM,mBAAoBJ,UAAWJ,EAAQqC,UAAhD,YAEF,gBAAC,EAAD,CACEjB,OAAQwB,EACR1B,QAAS,WACP2B,GAAY,IAEdnB,YAAaqB,IACbzB,WAAW,iBACXK,gBAAgB,+BAElB,gBAAC,EAAD,CACEP,OAAQsB,EACRxB,QAAS,WACPyB,GAAa,IAEfjB,YAAasB,IACb1B,WAAW,kBACXK,gBAAgB,oC,0BCjFlB1C,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6D,YAAa,CACX3D,OAAQ,OACRC,MAAO,QAET2D,QAAS,CACPvD,SAAU,GAEZwD,SAAU,CACR3D,gBAAiB,OACjBsB,QAAS,OACTe,UAAW,QAEbC,OAAQ,CACNpB,MAAO,UACPsB,UAAW,MACXD,aAAc,KACdqB,WAAY,KACZnB,SAAU,QAEZC,MAAO,CACLxB,MAAO,OACPuB,SAAU,OACVmB,WAAY,WAKLC,EAAqC,WAChD,IAAMrD,EAAUf,IAChB,OACE,uBAAKmB,UAAWJ,EAAQkD,SACtB,gBAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,gBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,uBACEtD,IAAKuD,IACLtD,IAAI,iBACJF,UAAWJ,EAAQiD,eAGvB,gBAACK,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGvD,UAAWJ,EAAQmD,UAC3C,sBAAI/C,UAAWJ,EAAQ8B,QAAvB,iBACA,qBAAG1B,UAAWJ,EAAQkC,OAAtB,yB,6CC3CJjD,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwC,KAAM,CACJC,UAAW,SACXf,QAAS,OACTtB,gBAAiB,QAEnBsC,OAAQ,CACNC,aAAc,MACdC,UAAW,IACXC,SAAU,OACVvB,MAAO,QAETmD,QAAS,CACLC,cAAe,MACfvE,MAAO,QACP4C,OAAQ,SACRN,UAAW,UAEfkC,eAAgB,CACZ5B,OAAQ,YAKH6B,EAA0C,WACnD,IAAMhE,EAAUf,IAChB,OACI,uBAAKmB,UAAWJ,EAAQ4B,KAAMkB,GAAI,mBAC9B,sBAAI1C,UAAWJ,EAAQ8B,QAAvB,aACA,uBAAK1B,UAAWJ,EAAQ6D,SACpB,gBAACI,EAAA,EAAD,CAAMC,OAAO,SAAS1D,KAAK,oCACvB,gBAAC2D,EAAA,EAAD,CAAU/D,UAAWJ,EAAQ+D,eAAgB9B,SAAU,QAASvB,MAAO,eAE3E,gBAACuD,EAAA,EAAD,CAAMC,OAAO,SAAS1D,KAAK,+BACvB,gBAAC4D,EAAA,EAAD,CAAQhE,UAAWJ,EAAQ+D,eAAgB9B,SAAU,QAASvB,MAAO,eAEzE,gBAACuD,EAAA,EAAD,CAAMC,OAAO,SAAS1D,KAAK,kCACvB,gBAAC6D,EAAA,EAAD,CAAWjE,UAAWJ,EAAQ+D,eAAgB9B,SAAU,QAASvB,MAAO,eAE5E,gBAACuD,EAAA,EAAD,CAAMC,OAAO,SAAS1D,KAAK,gCACvB,gBAAC8D,EAAA,EAAD,CAASlE,UAAWJ,EAAQ+D,eAAgB9B,SAAU,QAASvB,MAAO,kB,wGC/BpFzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwC,KAAM,CACJC,UAAW,SACXf,QAAS,OACTtB,gBAAiB,QAEnBsC,OAAQ,CACNC,aAAc,MACdC,UAAW,IACXC,SAAU,OACVvB,MAAO,QAET6D,MAAO,CACL7D,MAAO,QAET8D,YAAa,CACXC,QAAS,OACTX,cAAe,OAEjBY,MAAO,CACLpF,OAAQ,KAEVqF,KAAM,CACJC,SAAU,IACVzC,OAAQ,IAEV0C,sBAAuB,CACrB9C,aAAc,SAKP+C,GAAoC,WAC/C,IAAM9E,EAAUf,KAChB,OACE,uBAAKmB,UAAWJ,EAAQ4B,KAAMkB,GAAI,oBAChC,sBAAI1C,UAAWJ,EAAQ8B,QAAvB,qBACA,uBAAK1B,UAAWJ,EAAQwE,aACtB,gBAACO,EAAA,EAAD,CAAM3E,UAAWJ,EAAQ2E,MACvB,gBAACK,EAAA,EAAD,CAAgB5E,UAAWJ,EAAQ6E,uBACjC,gBAACI,EAAA,EAAD,CACE7E,UAAWJ,EAAQ0E,MACnBQ,MAAOC,IACPC,MAAM,aAER,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAYC,cAAY,EAAC9E,QAAQ,MAAjC,YAGA,gBAAC6E,EAAA,EAAD,CAAY7E,QAAQ,QAAQC,MAAM,gBAAgB8E,UAAU,KAA5D,kMAOJ,gBAACC,EAAA,EAAD,KACE,gBAAClF,EAAA,EAAD,CACEmF,KAAK,QACLhF,MAAM,YACNF,KAAK,yCAHP,cASJ,gBAACuE,EAAA,EAAD,CAAM3E,UAAWJ,EAAQ2E,MACvB,gBAACK,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAW7E,UAAWJ,EAAQ0E,MAAOQ,MAAOS,IAAOP,MAAM,UACzD,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAYC,cAAY,EAAC9E,QAAQ,MAAjC,SAGA,gBAAC6E,EAAA,EAAD,CAAY7E,QAAQ,QAAQC,MAAM,gBAAgB8E,UAAU,KAA5D,oPAQJ,gBAACC,EAAA,EAAD,KACE,gBAAClF,EAAA,EAAD,CACEmF,KAAK,QACLhF,MAAM,YACNF,KAAK,qCAHP,cASJ,gBAACuE,EAAA,EAAD,CAAM3E,UAAWJ,EAAQ2E,MACvB,gBAACK,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CACE7E,UAAWJ,EAAQ0E,MACnBQ,MAAOU,IACPR,MAAM,YAER,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAYC,cAAY,EAAC9E,QAAQ,MAAjC,WAGA,gBAAC6E,EAAA,EAAD,CAAY7E,QAAQ,QAAQC,MAAM,gBAAgB8E,UAAU,KAA5D,0OAQJ,gBAACC,EAAA,EAAD,KACE,gBAAClF,EAAA,EAAD,CACEmF,KAAK,QACLhF,MAAM,YACNF,KAAK,yCAHP,wBC5GGqF,OAZf,WACE,OACE,yBAAKzF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,QCFc0F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iDCLF/G,GAAQgH,aAAe,CACzBC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAIpBtH,GAAQwH,aAAoBxH,IAE5ByH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAe7H,MAAOA,IACpB,kBAAC,GAAD,QAGJ8H,SAASC,eAAe,SDqGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2850bee4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Noam.5cbad769.svg\";","module.exports = __webpack_public_path__ + \"static/media/LBB.ba185a96.png\";","module.exports = __webpack_public_path__ + \"static/media/ZPB.68af9c7a.png\";","module.exports = __webpack_public_path__ + \"static/media/headshot.76a62d2c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/FemFeed.36e685d6.png\";","module.exports = __webpack_public_path__ + \"static/media/Spotlist3.323216e9.png\";","module.exports = __webpack_public_path__ + \"static/media/Vobia.18c1155b.png\";","import * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport logo from '../media/Noam.svg';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => \n    createStyles({\n        logo: {\n            height: \"75px\",\n            width: \"75px\",\n            backgroundColor: \"#b3b3e6\"\n        },\n        bar: {\n            boxShadow: \"0px 0.5px 9px #b3b3e6\",\n            flexGrow: 1\n        },\n        buttons: {\n            float: \"right\"\n        },\n        logoContainer: {\n            flexGrow: 1\n        }\n    })\n); \n\nexport const NavBar: React.FunctionComponent = () => {\n    const classes = useStyles();\n    return(\n        <React.Fragment>\n            <AppBar position=\"sticky\">\n                <Toolbar className={classes.bar}>\n                    <div className={classes.logoContainer}>\n                        <img src={logo} className={classes.logo} alt=\"Noam Swisa logo\"/>\n                    </div>\n                    <div className={classes.buttons}>\n                        <Button href=\"#about-section\" variant=\"text\" color={\"secondary\"}>About</Button>\n                        <Button href=\"#projects-section\" variant=\"text\" color={\"secondary\"}>Projects</Button>\n                        <Button href=\"#contact-section\" variant=\"text\" color={\"secondary\"}>Contact</Button>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme: Theme) => \n    createStyles({\n      imageStyle: {\n        maxHeight: \"500px\"\n      },\n      closeButtonStyle: {\n        float: \"right\",\n        padding: \"0\"\n      }\n    })\n);\n\ntype ImageModalProps = {\n  imageSource: string;\n  isOpen: boolean;\n  altTextForImage: string;\n  imageTitle?: string;\n  onClose(): void;\n};\n\nexport const ImageModal: React.FunctionComponent<ImageModalProps> = (\n  props: ImageModalProps\n) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Dialog onClose={props.onClose} open={props.isOpen}>\n        <DialogTitle>\n            {props.imageTitle}\n            <IconButton aria-label=\"close\" onClick={props.onClose} className={classes.closeButtonStyle}>\n                <CloseIcon />\n            </IconButton>\n        </DialogTitle>\n        <img src={props.imageSource} alt={props.altTextForImage} className={classes.imageStyle}/>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { ImageModal } from \"./imgModal\";\nimport LBB from \"../media/LBB.png\";\nimport ZPB from \"../media/ZPB.png\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textAlign: \"center\",\n      padding: \"15px\"\n    },\n    header: {\n      marginBottom: \"7px\",\n      marginTop: \"0\",\n      fontSize: \"36px\"\n    },\n    ptext: {\n      margin: \"0 150px 0 150px\",\n      lineHeight: \"25px\"\n    },\n    linkText: {\n      cursor: \"pointer\",\n      color: \"#8383b4\",\n      textDecoration: \"none\",\n      \"&:hover\": {\n        textDecoration: \"underline\"\n      }\n    }\n  })\n);\n\nexport const About: React.FunctionComponent = () => {\n  const classes = useStyles();\n  const [ziggyOpen, setZiggyOpen] = React.useState<boolean>(false);\n  const [ladyOpen, setLadyOpen] = React.useState<boolean>(false);\n\n  return (\n    <div className={classes.root} id={\"about-section\"}>\n      <h1 className={classes.header}>About Me</h1>\n      <p className={classes.ptext}>\n        I'm your local friendly Brooklynite who happens to be a software\n        engineer. I attended CUNY Brooklyn College and graduated in 2018 with a\n        degree in Computer Science, and I currently work at JPMorgan Chase & Co.\n        My focus, as a developer, is primarily on web applications, with a\n        strong interest in user-centered UI design. I also care a lot about\n        making tech a more inclusive and welcoming space. In my free time, I\n        enjoy cross stitching, roller skating, and spoiling my dog,{\" \"}\n        <span\n          onClick={() => {\n            setLadyOpen(true);\n          }}\n          className={classes.linkText}\n        >\n          Lady Bird\n        </span>\n        , and my chinchilla,{\" \"}\n        <span\n          onClick={() => {\n            setZiggyOpen(true);\n          }}\n          className={classes.linkText}\n        >\n          Ziggy\n        </span>{\" \"}\n        to an absolutely unhealthy extent. In the time before covid-19, I might\n        have said I enjoyed travel, and didn't do it nearly enough. If you'd\n        like to collaborate (or conspire) with me on something, check out my contact info\n        <a href={\"#contact-section\"} className={classes.linkText}> here. </a>\n      </p>\n      <ImageModal\n        isOpen={ladyOpen}\n        onClose={() => {\n          setLadyOpen(false);\n        }}\n        imageSource={LBB}\n        imageTitle=\"Lady Bird Bean\"\n        altTextForImage=\"photo of Lady Bird the dog\"\n      />\n      <ImageModal\n        isOpen={ziggyOpen}\n        onClose={() => {\n          setZiggyOpen(false);\n        }}\n        imageSource={ZPB}\n        imageTitle=\"Zigford P. Bean\"\n        altTextForImage=\"photo of Ziggy the chinchilla\"\n      />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport headshot from \"../media/headshot.jpg\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    headshotPic: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    contain: {\n      flexGrow: 1\n    },\n    bigBlock: {\n      backgroundColor: \"#000\",\n      padding: \"20px\",\n      textAlign: \"left\"\n    },\n    header: {\n      color: \"#b3b3e6\",\n      marginTop: \"10%\",\n      marginBottom: \"3%\",\n      marginLeft: \"3%\",\n      fontSize: \"90px\"\n    },\n    ptext: {\n      color: \"#fff\",\n      fontSize: \"30px\",\n      marginLeft: \"3%\"\n    }\n  })\n);\n\nexport const Jumbotron: React.FunctionComponent = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.contain}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={6}>\n          <img\n            src={headshot}\n            alt=\"Noams face lol\"\n            className={classes.headshotPic}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} className={classes.bigBlock}>\n          <h1 className={classes.header}>Hi, I'm Noam!</h1>\n          <p className={classes.ptext}>Nice to meet you.</p>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Instagram, GitHub, LinkedIn, Twitter } from \"@material-ui/icons\";\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textAlign: \"center\",\n      padding: \"15px\",\n      backgroundColor: \"#fff\"\n    },\n    header: {\n      marginBottom: \"7px\",\n      marginTop: \"0\",\n      fontSize: \"36px\",\n      color: \"#000\"\n    },\n    iconRow: {\n        flexDirection: \"row\",\n        width: \"400px\",\n        margin: \"0 auto\",\n        textAlign: \"center\"\n    },\n    individualIcon: {\n        margin: \"5px\"\n    }\n  })\n);\n\nexport const ContactSection: React.FunctionComponent = () => {\n    const classes = useStyles();\n    return(\n        <div className={classes.root} id={\"contact-section\"}>\n            <h1 className={classes.header}> Contact </h1>\n            <div className={classes.iconRow}>\n                <Link target=\"_blank\" href=\"http://linkedin.com/in/noamswisa\">\n                    <LinkedIn className={classes.individualIcon} fontSize={\"large\"} color={\"secondary\"}/>\n                </Link>\n                <Link target=\"_blank\" href=\"http://github.com/NoamBytes\">\n                    <GitHub className={classes.individualIcon} fontSize={\"large\"} color={\"secondary\"}/>\n                </Link>\n                <Link target=\"_blank\" href=\"http://instagram.com/noambytes\">\n                    <Instagram className={classes.individualIcon} fontSize={\"large\"} color={\"secondary\"}/>\n                </Link>\n                <Link target=\"_blank\" href=\"http://twitter.com/NoamBytes\">\n                    <Twitter className={classes.individualIcon} fontSize={\"large\"} color={\"secondary\"}/>\n                </Link>\n            </div>\n        </div>\n    )\n}","import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@material-ui/core\";\nimport FemFeed from \"../media/FemFeed.png\";\nimport Spotlist from \"../media/Spotlist3.png\";\nimport Vobia from \"../media/Vobia.png\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textAlign: \"center\",\n      padding: \"15px\",\n      backgroundColor: \"#000\",\n    },\n    header: {\n      marginBottom: \"7px\",\n      marginTop: \"0\",\n      fontSize: \"36px\",\n      color: \"#fff\",\n    },\n    pText: {\n      color: \"#fff\",\n    },\n    projectsRow: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n    media: {\n      height: 300,\n    },\n    card: {\n      maxWidth: 345,\n      margin: 10,\n    },\n    cardActionAreaWBottom: {\n      marginBottom: 20,\n    },\n  })\n);\n\nexport const Projects: React.FunctionComponent = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root} id={\"projects-section\"}>\n      <h1 className={classes.header}>Selected Projects</h1>\n      <div className={classes.projectsRow}>\n        <Card className={classes.card}>\n          <CardActionArea className={classes.cardActionAreaWBottom}>\n            <CardMedia\n              className={classes.media}\n              image={Spotlist}\n              title=\"Spotlist\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\">\n                Spotlist\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Spotlist is a project that I recently started working on with my\n                friend Chris. It is a web application that takes setlists from\n                the website setlist.fm and turns them into Spotify playlist.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              href=\"https://github.com/NoamBytes/spotlist\"\n            >\n              Git Repo\n            </Button>\n          </CardActions>\n        </Card>\n        <Card className={classes.card}>\n          <CardActionArea>\n            <CardMedia className={classes.media} image={Vobia} title=\"Vobia\" />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\">\n                Vobia\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Vobia was an application for the Samsung Gear VR that I worked\n                on during my participation in the CUNYCodes program in 2018. My\n                team and I created this appliction to allow users to gradually\n                desensitize themselves to their fear of spiders.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              href=\"https://github.com/CUNYTech/Vobia\"\n            >\n              Git Repo\n            </Button>\n          </CardActions>\n        </Card>\n        <Card className={classes.card}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image={FemFeed}\n              title=\"FemFeed\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\">\n                FemFeed\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                FemFeed was a collaborative code sharing website for women that\n                I created at the Technica 2016 hackathon. While the website is\n                no longer available to view, the dev post about the site can be\n                found below and contains screenshots.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              href=\"https://devpost.com/software/fem-feed\"\n            >\n              DevPost Article\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavBar } from './components/header';\nimport { About } from './components/about';\nimport { Jumbotron } from './components/jumbotron';\nimport { ContactSection } from './components/contact';\nimport { Projects } from './components/projects';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Jumbotron/>\n      <About/>\n      <Projects/>\n      <ContactSection/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"fontsource-roboto\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes\n} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#2c2c2c\",\n      main: \"#000000\",\n      dark: \"#000000\",\n      contrastText: \"#fff\"\n    },\n    secondary: {\n      light: \"#e6e5ff\",\n      main: \"#b3b3ee\",\n      dark: \"#8284bb\",\n      contrastText: \"#000\"\n    }\n  }\n});\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}